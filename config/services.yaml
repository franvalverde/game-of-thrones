# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    Whalar\:
        resource: '%kernel.project_dir%/src/*'
        exclude:
            - '%kernel.project_dir%/src/Kernel.php'

    Whalar\Tests\Shared\:
        resource: '%kernel.project_dir%/tests/Shared/*'

    # Core context controllers
    Whalar\Core\Infrastructure\Delivery\Rest\:
        autowire: true
        autoconfigure: true
        resource: '%kernel.project_dir%/src/Core/Infrastructure/Delivery/Rest'
        tags: [ 'controller.service_arguments' ]

    # Shared context controllers
    Whalar\Shared\Infrastructure\Delivery\Rest\:
        autowire: true
        autoconfigure: true
        resource: '%kernel.project_dir%/src/Shared/Infrastructure/Delivery/Rest'
        tags: [ 'controller.service_arguments' ]

    # Error handler
    whalar.error_handler:
        class: Whalar\Shared\Infrastructure\ErrorHandler\ErrorHandler
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }

    # UUID generator
    Whalar\Shared\Infrastructure\Generator\UuidGenerator:
        class: Whalar\Shared\Infrastructure\Generator\SymfonyUuidGenerator
        public: true

    # Repositories
    Whalar\Core\Domain\Actor\Repository\ActorRepository:
        class: Whalar\Core\Infrastructure\Persistence\Doctrine\Repository\DoctrineActorRepository
        arguments: [ '@doctrine.orm.entity_manager' ]
        public: true

    Whalar\Core\Domain\Character\Repository\CharacterRepository:
        class: Whalar\Core\Infrastructure\Persistence\Doctrine\Repository\DoctrineCharacterRepository
        arguments: [ '@doctrine.orm.entity_manager' ]
        public: true

    Whalar\Core\Domain\CharacterRelate\Repository\CharacterRelateRepository:
        class: Whalar\Core\Infrastructure\Persistence\Doctrine\Repository\DoctrineCharacterRelateRepository
        arguments: [ '@doctrine.orm.entity_manager' ]
        public: true

    Whalar\Core\Domain\House\Repository\HouseRepository:
        class: Whalar\Core\Infrastructure\Persistence\Doctrine\Repository\DoctrineHouseRepository
        arguments: [ '@doctrine.orm.entity_manager' ]
        public: true

    Whalar\Shared\Domain\Event\Repository\StoredEventRepository:
        class: Whalar\Shared\Infrastructure\Persistence\InMemory\DoctrineStoredEventRepository
        arguments: [ '@doctrine.orm.entity_manager','@Whalar\Shared\Infrastructure\Generator\UuidGenerator' ]
        public: true

    # Event middleware
    Whalar\Shared\Infrastructure\Messaging\Bus\DomainEventMiddleware:
        class: Whalar\Shared\Infrastructure\Messaging\Bus\DomainEventMiddleware
        arguments: [ '@Whalar\Shared\Domain\Event\Repository\StoredEventRepository' ]
        public: true

    _instanceof:
        # all services implementing the CommandHandler interface
        # will be registered on the command.bus bus
        \Whalar\Shared\Application\Command\CommandHandler:
            tags:
                - { name: messenger.message_handler, bus: command.bus }

        # while those implementing QueryHandler interface
        # will be registered on the query.bus bus
        \Whalar\Shared\Application\Query\QueryHandler:
            tags:
                - { name: messenger.message_handler, bus: query.bus }

        # and those extending MessageEventHandler class
        # will be registered on the event.bus bus
        \Whalar\Shared\Application\Event\MessageEventHandler:
            tags:
                - { name: messenger.message_handler, bus: event.bus }

        \Whalar\Shared\Application\Event\EventHandler:
            tags: [ 'whalar.event_handler' ]

    Whalar\Shared\Infrastructure\Messaging\Transport\Serialization\DomainEventMapping:
        arguments: [ !tagged whalar.event_handler ]

    Whalar\Shared\Domain\Messaging\Serialization\MessageMapping: '@whalar.message_mapping'

    Monolog\Processor\IntrospectionProcessor:
        class: Monolog\Processor\IntrospectionProcessor
        tags:
            - { name: monolog.processor }

    Monolog\Processor\MemoryPeakUsageProcessor:
        class: Monolog\Processor\MemoryPeakUsageProcessor
        tags:
            - { name: monolog.processor }

    Monolog\Processor\MemoryUsageProcessor:
        class: Monolog\Processor\MemoryUsageProcessor
        tags:
            - { name: monolog.processor }

    Monolog\Processor\WebProcessor:
        class: Monolog\Processor\WebProcessor
        tags:
            - { name: monolog.processor }

    Monolog\Processor\UidProcessor:
        class: Monolog\Processor\UidProcessor
        tags:
            - { name: monolog.processor }

    Monolog\Processor\PsrLogMessageProcessor:
        class: Monolog\Processor\PsrLogMessageProcessor
        tags:
            - { name: monolog.processor }

    Monolog\Processor\TagProcessor:
        class: Monolog\Processor\TagProcessor
        arguments:
            - [ 'got-service' ]
        tags:
            - { name: monolog.processor }

