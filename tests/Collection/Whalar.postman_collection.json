{
	"info": {
		"_postman_id": "1f1d9a17-d08e-4fd6-8af1-1f21d741e754",
		"name": "Whalar",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "2466958"
	},
	"item": [
		{
			"name": "v1",
			"item": [
				{
					"name": "houses",
					"item": [
						{
							"name": "create house",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", () => { ",
											"  pm.response.to.have.status(201)",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Stark\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/v1/houses",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"v1",
										"houses"
									]
								}
							},
							"response": []
						},
						{
							"name": "update house",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", () => { ",
											"  pm.response.to.have.status(204)",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Frey\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/v1/houses/{{houseId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"v1",
										"houses",
										"{{houseId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "list houses",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", () => { ",
											"  pm.response.to.have.status(200)",
											"  var jsonData = pm.response.json()",
											"  var houses = jsonData.houses",
											"  var notHouses = houses.length == 0",
											"  pm.test('No houses', function() {",
											"    pm.expect(notHouses).to.be.false",
											"  });",
											"  if(!notHouses) { ",
											"    pm.environment.set(\"houseId\", houses[0].id)",
											"  }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Stark\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/v1/houses?size=10",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"v1",
										"houses"
									],
									"query": [
										{
											"key": "size",
											"value": "10"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "actors",
					"item": [
						{
							"name": "create actor",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", () => { ",
											"  pm.response.to.have.status(201)",
											"  var jsonData = pm.response.json()",
											"  var actorId = jsonData.actorId",
											"  pm.environment.set(\"actorId\", actorId);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"actorId\": \"nm2231519\",\n    \"name\": \"Jaime Cklesy\",\n    \"seasonsActive\": [\n        1,\n        2,\n        3\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/v1/actors",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"v1",
										"actors"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "characters",
					"item": [
						{
							"name": "create character",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", () => { ",
											"  pm.response.to.have.status(201)",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"characterId\": \"ch1213779\",\n    \"name\": \"Jaime Lannister\",\n    \"kingsguard\": true,\n    \"nickname\": \"Littlefinger\",\n    \"imageFull\": \"https://images-na.ssl-images-amazon.com/images/M/MV5BMTQ1MjE3OTc3M15BMl5BanBnXkFtZTcwODgzODg4OQ@@._V1_.jpg\",\n    \"actors\": [\n        \"{{actorId}}\"\n    ],\n    \"houseId\": \"{{houseId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/v1/characters",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"v1",
										"characters"
									]
								}
							},
							"response": []
						},
						{
							"name": "list characters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", () => { ",
											"  pm.response.to.have.status(200)",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/v1/characters",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"v1",
										"characters"
									]
								}
							},
							"response": []
						},
						{
							"name": "retrieve character",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", () => { ",
											"  pm.response.to.have.status(200)",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/v1/characters/ch1223779",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"v1",
										"characters",
										"ch1223779"
									]
								}
							},
							"response": []
						},
						{
							"name": "relate characters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", () => { ",
											"  pm.response.to.have.status(200)",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"relatedTo\": \"ch1223779\",\n    \"type\": \"guardianOf\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/v1/characters/ch1223779/relates",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"v1",
										"characters",
										"ch1223779",
										"relates"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "elastic",
			"item": [
				{
					"name": "search",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"query\": {\n\t\t\"match_all\": {}\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9200/_search/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9200",
							"path": [
								"_search",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Status",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/status",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"status"
					]
				}
			},
			"response": []
		}
	]
}